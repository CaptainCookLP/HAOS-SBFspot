#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the SBFspot service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================

CONFIG_PATH=/data/options.json


# --- GENERATE CONFIG --
echo "PWD is current directory $(pwd)"
cd / 

echo "PWD is current directory $(pwd)"

function bashio::config.equals() {
    local key=${.Connection_Type}
    local equals=${.Bluetooth}
    local Bluetooth

    bashio::log.trace "${FUNCNAME[0]}:" "$@"

    value=$(bashio::config "${key}")
    if ! bashio::var.equals "${value}" "${equals}"; then
    bashio::log.info
    bashio::log.info "[Bluetooth being setup]"
    bashio::log.info
    /usr/bin/sbfspot/genBluetoothConfig.sh /usr/bin/sbfspot/SBFspot.cfg /usr/bin/sbfspot/SBFspotUpload.cfg
        return "${__BASHIO_EXIT_NOK}"
    fi

    return "${__BASHIO_EXIT_OK}"
}


           
#if bashio::config.true "$(connection_type: "Ethernet")"; then
#   bashio::log.warning "Ethernet being setup"
#   /usr/bin/sbfspot/genEthernetConfig.sh /usr/bin/sbfspot/SBFspot.cfg /usr/bin/sbfspot/SBFspotUpload.cfg
#fi

# ---- Print Host BT Controller and sys info
echo "$(uname -smrv)"
## Get the 'message' key from the user config options.
message=$(echo "[Host Bluetooth MAC Address] $(bluetoothctl list)")


## Print the message the user supplied, defaults to "Hello World..."
bashio::log.info "${message:="Hello World..."}"

# ---- RUN ----

echo 'Starting daemon'


# cron
echo 'Starting cron in foreground'
exec /usr/sbin/crond -f
